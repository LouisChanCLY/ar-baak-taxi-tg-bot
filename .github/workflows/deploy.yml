name: Deploy Telegram Bot

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - dev

  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set environment based on branch
        id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
            echo "BOT_TOKEN=${{ secrets.PROD_BOT_TOKEN }}" >> $GITHUB_ENV
            echo "FUNCTION_NAME=telegramBotProd" >> $GITHUB_ENV
          else
            echo "ENV=dev" >> $GITHUB_ENV
            echo "BOT_TOKEN=${{ secrets.DEV_BOT_TOKEN }}" >> $GITHUB_ENV
            echo "FUNCTION_NAME=telegramBotDev" >> $GITHUB_ENV
          fi

      - name: "Authenticate to Google Cloud"
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to Google Cloud Functions
        run: |
          gcloud functions deploy ${{ env.FUNCTION_NAME }} \
            --runtime python312 \
            --trigger-http \
            --allow-unauthenticated \
            --entry-point handle_telegram_update \
            --set-env-vars BOT_TOKEN=${{ env.BOT_TOKEN }} \
            --region ${{ secrets.GCP_REGION }} \
            --gen2 \
            --source telegram-bot/

      - name: Remove existing webhook
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ env.BOT_TOKEN }}/deleteWebhook

      - name: Reconnect webhook
        run: |
          WEBHOOK_URL="https://${{ secrets.GCP_REGION }}-${{ secrets.GCP_PROJECT_ID }}.cloudfunctions.net/${{ env.FUNCTION_NAME }}"
          curl -s -X POST https://api.telegram.org/bot${{ env.BOT_TOKEN }}/setWebhook -d "url=${WEBHOOK_URL}"
